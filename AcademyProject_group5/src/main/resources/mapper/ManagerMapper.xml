<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="academy.repo.ManagerMapper">
	
	<!-- 강의 관리자 -->
	
	<select id="selectManager" parameterType="manager" resultType="String">
		select manager_type
		from Manager
		where manager_id = #{managerId} and manager_pass = #{managerPass}
	</select>
	
	<insert id="insertLecture" parameterType="lecture">
		insert into Lecture
		(lecture_id, lecture_class, lecture_name, professor_name)
		values (#{lectureId}, #{lectureClass}, #{lectureName}, #{professorName})
	</insert>
	
	<select id="selectAllLecture" parameterType="paging" resultType="lecture">
		select *
		from (select rownum as rnum, sub.*
			 from (select *
				  from Lecture 
				  <choose>
					  <when test="searchData != null and searchDataType == 'lectureId'">
				      where lecture_id like '%'||#{searchData}||'%' 
				      </when>
				      <when test="searchData != null and searchDataType == 'lectureName'">
				      where lecture_name like '%'||#{searchData}||'%' 
				      </when>
				      <when test="searchData != null and searchDataType == 'professorName'">
				      where professor_name like '%'||#{searchData}||'%' 
				      </when>
			      </choose>
				  order by lecture_id) sub)
		where rnum &gt;= #{startIdx} and rnum &lt;= #{endIdx}
	</select>
	
	<select id="selectLectureListCount" parameterType="paging" resultType="int">
		select count(*)
		from Lecture 
		<choose>
			<when test="searchData != null and searchDataType == 'lectureId'">
		    where lecture_id like '%'||#{searchData}||'%' 
		    </when>
		    <when test="searchData != null and searchDataType == 'lectureName'">
		    where lecture_name like '%'||#{searchData}||'%' 
		    </when>
		    <when test="searchData != null and searchDataType == 'professorName'">
		    where professor_name like '%'||#{searchData}||'%' 
		    </when>
		</choose>
				  
	</select>
	
	<select id="selectLecture" parameterType="lecture" resultType="lecture">
		select *
		from Lecture
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</select>
	
	<update id="updateLecture" parameterType="lecture">
		update Lecture
		set lecture_name = #{lectureName}, professor_name = #{professorName}
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</update>
	
	<delete id="deleteLecture" parameterType="lecture">
		delete from Lecture
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</delete>
	
	<select id="selectAllLectureTime" parameterType="lecture" resultType="lecture_time">
		select *
		from LectureTime
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</select>
	
	<select id="selectAlreadyLectureTime" parameterType="lecture_time" resultType="lecture_time">
		select lecture_class, lecture_week, lecture_start, lecture_end
		from LectureTime
		where lecture_start &lt;= #{lectureEnd}
		  and lecture_end &gt;= #{lectureStart}
		  and lecture_week = #{lectureWeek}
		  and lecture_id = #{lectureId}
	</select>
	
	<select id="selectLectureTime" parameterType="int" resultType="lecture_time">
		select *
		from LectureTime
		where lecture_time_id = #{lectureTimeId}
	</select>
	
	<insert id="insertLectureTime" parameterType="lecture_time">
		insert into LectureTime
		(lecture_id, lecture_class, lecture_start, lecture_end, lecture_place, lecture_week)
		values (#{lectureId}, #{lectureClass}, #{lectureStart}, #{lectureEnd},
				#{lecturePlace}, #{lectureWeek})
	</insert>
	
	<update id="updateLectureTime" parameterType="lecture_time">
		update LectureTime
		set lecture_start = #{lectureStart},
			lecture_end = #{lectureEnd},
			lecture_place = #{lecturePlace},
			lecture_week = #{lectureWeek}	
		where lecture_time_id = #{lectureTimeId}
	</update>
	
	<delete id="deleteAllLectureTime" parameterType="lecture">
		delete from LectureTime
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</delete>
	
	<delete id="deleteLectureTime" parameterType="int">
		delete from LectureTime
		where lecture_time_id = #{lectureTimeId}
	</delete>
	
	<!-- 마일리지 관리자 -->
	
	<select id="selectAllMileage" parameterType="paging" resultType="mileage">
		select *
		from(select rownum as rnum, sub.*
			 from (select *
			 	  from Mileage
			 	  order by
			 	  <choose>
				 	  <when test="orderType == 'mileValue'">
					   	 mile_value
					  </when>
					  <otherwise>
					  	 mile_name
					  </otherwise>
				  </choose>
			 	  <if test="isAsc == false">
			 	 	 desc
		 	 	  </if>
		 	 	  ) sub
		 	 )
		where rnum &gt;= #{startIdx} and rnum &lt;= #{endIdx} 		
	</select> 
	
	<select id="selectMileage" parameterType="String" resultType="mileage">
		select *
		from Mileage
		where mile_name = #{mileName}
	</select> 
	
	<insert id="insertMileage" parameterType="mileage">
		insert into Mileage
		values (#{mileName}, #{mileValue})
	</insert>
	
	<delete id="deleteMileage" parameterType="String">
		delete from Mileage
		where mile_name = #{mileName}
	</delete>
	
	<select id="selectAllMileageProduct" parameterType="paging" resultType="mileage_product">
		select *
		from(select rownum as rnum, sub.*
			 from (select product_id, product_name, product_cost
				  from MileageProduct
			 	  order by
			 	  <choose>
				 	  <when test="orderType == 'productCost'">
					   	 product_cost
					  </when>
					  <otherwise>
					  	 product_name
					  </otherwise>
				  </choose>
			 	  <if test="isAsc == false">
			 	 	 desc
		 	 	  </if>
				  ) sub
			 )
		where rnum &gt;= #{startIdx} and rnum &lt;= #{endIdx} 
	</select>
	
	<select id="selectMileageProduct" parameterType="int" resultType="mileage_product">
		select *
		from MileageProduct
		where product_id = #{productId}
	</select>
	
	<insert id="insertMileageProduct" parameterType="mileage_product">
		insert into MileageProduct
		(product_name, product_cost, product_content, product_imgfile)
		values (#{productName}, #{productCost}, #{productContent}, #{productImgfile})
	</insert>
	
	<update id="updateMileageProduct" parameterType="mileage_product">
		update MileageProduct
		set product_name = #{productName},
			product_cost = #{productCost},
			product_content = #{productContent}
			<if test="productImgfile != null">
			, product_imgfile = #{productImgfile}
			</if>
		where product_id = #{productId}
	</update>
	
	<delete id="deleteMileageProduct" parameterType="int">
		delete from MileageProduct
		where product_id = #{productId}
	</delete>
	
</mapper>
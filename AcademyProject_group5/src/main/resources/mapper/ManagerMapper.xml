<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="academy.repo.ManagerMapper">
	
	<select id="selectManager" parameterType="manager" resultType="String">
		select manager_type
		from Manager
		where manager_id = #{managerId} and manager_pass = #{managerPass}
	</select>
	
	<insert id="insertLecture" parameterType="lecture">
		insert into Lecture
		(lecture_id, lecture_class, lecture_name, professor_name)
		values (#{lectureId}, #{lectureClass}, #{lectureName}, #{professorName})
	</insert>
	
	<select id="selectAllLecture" parameterType="paging" resultType="lecture">
		select *
		from (select rownum as rnum, sub.*
			 from (select *
				  from Lecture 
				  order by lecture_id) sub)
		where rnum &gt;= #{startIdx} and rnum &lt;= #{endIdx}
	</select>
	
	<select id="selectLecture" parameterType="lecture" resultType="lecture">
		select *
		from Lecture
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</select>
	
	<update id="updateLecture" parameterType="lecture">
		update Lecture
		set lecture_name = #{lectureName}, professor_name = #{professorName}
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</update>
	
	<delete id="deleteLecture" parameterType="lecture">
		delete from Lecture
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</delete>
	
	<select id="selectAllLectureTime" parameterType="lecture" resultType="lecture_time">
		select *
		from LectureTime
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</select>
	
	<insert id="insertLectureTime" parameterType="lecture_time">
		insert into LectureTime
		(lecture_id, lecture_class, lecture_start, lecture_end, lecture_place, lecture_week)
		values (#{lectureId}, #{lectureClass}, #{lectureStart}, #{lectureEnd},
				#{lecturePlace}, #{lectureWeek})
	</insert>
	
	<update id="updateLectureTime" parameterType="lecture_time">
		update LectureTime
		set lecture_start = #{lectureStart},
			lecture_end = #{lectureEnd},
			lecture_place = #{lecturePlace},
			lecture_week = #{lectureWeek}	
		where lecture_time_id = #{lectureTimeId}
	</update>
	
	<delete id="deleteAllLectureTime" parameterType="lecture">
		delete from LectureTime
		where lecture_id = #{lectureId} and lecture_class = #{lectureClass}
	</delete>
	
	<delete id="deleteLectureTime" parameterType="int">
		delete from LectureTime
		where lecture_time_id = #{lectureTimeId}
	</delete>
</mapper>
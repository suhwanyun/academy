<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="academy.repo.TermMapper">
	
	<select id="selectTermCount" resultType="int">
		select count(*)
		from Term
	</select>
	
	<select id="selectTodayTerm" resultType="term">
		select *
		from Term
		where term_start &lt;= to_char(sysdate, 'YYYY-mm-dd') and
				term_end &gt;= to_char(sysdate, 'YYYY-mm-dd')
	</select>
	
	<insert id="insertTerm" parameterType="term">
		insert into Term
		values (#{termStart}, #{termEnd})
	</insert>
	
	<select id="selectAfterTermStartingDate" resultType="date">
		select term_start
		from(select rownum as rnum, sub.*
		    from(select term_start
		        from Term
		        where term_start > to_char(sysdate, 'YYYY-mm-dd')
		        order by term_start
		        ) sub
		    )
		where rnum = 1
	</select>
	
	<select id="selectTermEndDate" resultType="date">
		select term_end
		from(select rownum as rnum, sub.*
			from(select term_end
		        from Term
		        where term_end > to_char(sysdate, 'YYYY-mm-dd')
		        order by term_end
		        ) sub
		    )
		where rnum = 1
	</select>
	
	<!-- 반장 투표 관련 쿼리 -->
	
	<select id="selectVoterCount" parameterType="lecture" resultType="int">
		select count(*)
		from LectureApply
		where is_president = 'Y' 
		  and lecture_id = #{lectureId}
		  and lecture_class = #{lectureClass}
	</select>
	
	<update id="updateNotPresident" parameterType="voting">
		update LectureApply
		set is_president = 'N'
		where user_id in
			  (select user_id
			   from (select rownum as rnum, sub.*
			  		 from(select user_id 
			  		 	  from LectureApply 
			  		 	  where lecture_id = #{lectureId} 
			  		 	    and lecture_class = #{lectureClass}
			  		 	  order by user_id) sub
			  		 )
			   where rnum != #{votingResult}	 
			  )
	</update>
	
	<update id="updateCoercionPresident" parameterType="lecture">
		update LectureApply
		set is_president = 'Y'
		where lecture_id = #{lectureId}
		  and lecture_class = #{lectureClass}
	</update>
	
	<!-- 학기 종료 관련 쿼리 -->	
	<delete id="deleteAllLectureRecommend">
		delete from Recommend
		where LPAD(posting_type, 4) = 'lect'
	</delete>
	
	<delete id="deleteAllLectureComment">
		delete from PostingComment
		where LPAD(posting_type, 4) = 'lect'
	</delete>
	
	<delete id="deleteAllLecturePosting">
		delete from Posting
		where LPAD(posting_type, 4) = 'lect'
	</delete>
	
	<delete id="deleteAllLectureApply">
		delete from LectureApply
	</delete>
	
	<delete id="deleteAllLectureNotice">
		delete from LectureNotice
	</delete>
	
	<delete id="deleteAllCancelLecture">
		delete from CancelLecture
	</delete>
	
	<delete id="deleteAllLectureTime">
		delete from LectureTime
	</delete>
	
	<delete id="deleteAllLecture">
		delete from Lecture
	</delete>
	
	<delete id="deleteTerm">
		delete from Term
	</delete>
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="academy.repo.LectureMapper">

	<!-- <resultMap type="lecture" id="lectureMapping">
		<id column="lecture_id" property="lectureId"/>
		<id column="lecture_class" property="lectureClass"/>
		<result column="lecture_name" property="lectureName"/>
		<result column="professor_name" property="professorName"/>
	</resultMap> -->
	
	<select id="selectLectureByPage" parameterType="paging" resultType="lecture">
		select *
		from (select rownum as rnum, sub.*
			 from (select *
				  from Lecture 
				  order by lecture_id) sub)
		where rnum &gt;= #{startIdx} and rnum &lt;= #{endIdx}
	</select>
	
	<insert id="insertLectureAllpy" parameterType="lecture_apply">
		insert into LectureApply
		(lecture_id, user_id, lecture_class, is_president, isPresident)
		values (#{lectureId}, #{userId}, #{lectureClass}, #{isPresident})
	</insert>
	
	<delete id="deleteLectureApply" parameterType="lecture_apply">
		delete from LectureApply
		where user_id = #{userId}
		  and lecture_id = #{lectureId}
	</delete>
	
	<select id="selectLectureByUser" parameterType="String">
		select *
		from LectureApply
		where user_id = #{userId}
	</select>
	
	<select id="selectLectureTimeByUser" parameterType="String">
		select lectureId, lectureClass, lectureStart, lectureEnd, lecturePlace, lectureWeek, isTempDate
		from LectureTime join LectureApply using (lecture_id)
		where user_id = #{user_id} 
	</select>
	
	<select id="selectIsPresident" parameterType=""
</mapper>